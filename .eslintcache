[{"/Users/wchen/Documents/Projects/breakout/client/src/index.js":"1","/Users/wchen/Documents/Projects/breakout/client/src/reportWebVitals.js":"2","/Users/wchen/Documents/Projects/breakout/client/src/App.js":"3","/Users/wchen/Documents/Projects/breakout/client/src/pages/MainPage.js":"4","/Users/wchen/Documents/Projects/breakout/client/src/pages/JoinPage.js":"5","/Users/wchen/Documents/Projects/breakout/client/src/pages/CreateRoomPage.js":"6","/Users/wchen/Documents/Projects/breakout/client/src/components/JoinRoom.js":"7","/Users/wchen/Documents/Projects/breakout/client/src/components/JoinForm.js":"8"},{"size":500,"mtime":1611461921517,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611444508991,"results":"11","hashOfConfig":"10"},{"size":525,"mtime":1611468476645,"results":"12","hashOfConfig":"10"},{"size":914,"mtime":1611487445250,"results":"13","hashOfConfig":"10"},{"size":489,"mtime":1611475594899,"results":"14","hashOfConfig":"10"},{"size":7320,"mtime":1611495387158,"results":"15","hashOfConfig":"10"},{"size":5352,"mtime":1611495390665,"results":"16","hashOfConfig":"10"},{"size":1262,"mtime":1611487569066,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"2douvu",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/wchen/Documents/Projects/breakout/client/src/index.js",[],["36","37"],"/Users/wchen/Documents/Projects/breakout/client/src/reportWebVitals.js",[],"/Users/wchen/Documents/Projects/breakout/client/src/App.js",[],"/Users/wchen/Documents/Projects/breakout/client/src/pages/MainPage.js",[],"/Users/wchen/Documents/Projects/breakout/client/src/pages/JoinPage.js",[],"/Users/wchen/Documents/Projects/breakout/client/src/pages/CreateRoomPage.js",[],"/Users/wchen/Documents/Projects/breakout/client/src/components/JoinRoom.js",["38"],"import { useEffect, useRef, useState } from 'react';\nimport { Container, Col, Row, Button, Form } from 'react-bootstrap';\n\n\nexport default function JoinRoom({ ID }) {\n    const [video, setVideo] = useState(null);\n    const [canvas, setCanvas] = useState(null);\n    const [notes, setNotes] = useState('')\n    const [showCanvas, setShowCanvas] = useState(false);\n\n    const videoRef = useRef({});\n    const audioRef = useRef(null);\n  \n    useEffect(() => {\n      import('peerjs').then((module) => {\n        const Peer = module.default;\n        const peer = new Peer({\n          host: 'polar-escarpment-94286.herokuapp.com',\n          port: process.env.NODE_ENV === 'development' ? 80 : 443,\n        });\n        peer.on('open', (id) => {\n          console.log('my peer id:', id);\n  \n          navigator.mediaDevices\n            .getUserMedia({\n              video: true,\n            })\n            .then((stream) => {\n              videoRef.current.srcObject = stream;\n            });\n          navigator.mediaDevices\n            .getUserMedia({\n              audio: true,\n            })\n            .then((stream) => {\n              console.log('calling', ID);\n              peer.call(ID, stream);\n            });\n  \n          console.log('connecting to', ID);\n          const conn = peer.connect(ID);\n          conn.on('open', () => {\n            console.log('connection opened');\n            conn.on('data', (data) => {\n            //   var stream = data.captureStream(25);\n            //   recVidRef.current.srcObject = stream;\n            // console.log(data)\n            setVideo(data.image)\n            setCanvas(data.canvas)\n            //recVidRef.current = data;\n            });\n          });\n\n         // conn.send(videoRef.current.srcObject)\n          const canvas = document.createElement('canvas');\n          canvas.width = 225;\n          canvas.height = 168.75;\n          const ctx = canvas.getContext('2d');\n  \n          setInterval(() => {\n            ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n            //conn.send(getASCII(canvas));\n            // conn.send(videoRef.current)\n            const image = canvas.toDataURL()\n            conn.send({image: image})\n          }, 100);\n\n        });\n      });\n    }, []);\n\n    const downloadTxtFile = () => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([document.getElementById('notes').value],    \n                    {type: 'text/plain;charset=utf-8'});\n        element.href = URL.createObjectURL(file);\n        element.download = \"notes.txt\";\n        document.body.appendChild(element);\n        element.click();\n      }\n\n    return (\n        <Container className=\"m-0 p-0\">\n            <Row>\n            <Col className=\"m-0 p-0\">\n                <Row className=\"m-0 p-0\">\n                <video\n                autoPlay\n                className=\"mb-4 mt-5\"\n                ref={videoRef}\n                style={{\n                    width: 400,\n                }}\n                ></video>\n               \n                {!videoRef && <h2>Loading...</h2>}\n                </Row>\n                <Row className=\"p-0 m-0\">\n                    {video ? \n                   <img src={video} alt=\"video\" width=\"400\" >\n                   </img>\n                   : <h3 className=\"m-5\">Waiting for connection...</h3>\n                   }\n                </Row>\n            </Col>\n            <Col>\n            <Row className=\"mt-4\">\n                <Button\n                variant=\"danger\" size=\"lg\" type=\"submit\" block\n                className=\"mt-1 mb-4\"\n                onClick={() => {\n                    window.location.href = '/'\n                }}\n            >\n                Exit Room\n            </Button>\n            <video autoPlay className=\"d-none\" ref={audioRef}></video>\n            </Row>\n                <div className=\"text-center\">\n                    <Button\n                    variant=\"danger\" size=\"lg\" type=\"submit\" \n                    className=\"mb-2\"\n                    onClick={() => {\n                        setShowCanvas(!showCanvas)\n                    }}\n                    >\n                    Swap Notes/Host Canvas\n                    </Button>\n                </div>\n                {! showCanvas && <Col>\n                <Form className=\"text-center\">\n                    <Form.Group controlId=\"notes\">\n                        <Form.Label>My Notes: </Form.Label>\n                        <Form.Control \n                        as=\"textarea\" rows={14} \n                        value={notes}\n                        onChange={e => setNotes(e.target.value)}\n                        />\n                        \n                    </Form.Group>\n                    </Form>\n                \n            <div className=\"text-center\">\n            <Button\n                variant=\"success\" size=\"lg\" type=\"submit\"\n                className=\"mb-0\"\n                onClick={() => {\n                    downloadTxtFile()\n                }}\n                >\n                Save Notes as .txt\n                </Button>\n            </div> \n            </Col> }\n                <Col> \n                { canvas && <img src={canvas} alt=\"canvas\" width=\"500\" >\n            </img> } \n\n                </Col>\n            </Col>\n            \n            </Row>\n\n           \n        </Container>\n    )\n}\n\n","/Users/wchen/Documents/Projects/breakout/client/src/components/JoinForm.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":70,"column":8,"nodeType":"45","endLine":70,"endColumn":10,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ID'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [ID]",{"range":"52","text":"53"},[2252,2254],"[ID]"]